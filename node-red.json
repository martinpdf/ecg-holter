[
    {
        "id": "a3d597b112ddb956",
        "type": "mqtt in",
        "z": "eb34c2cb8d54bb00",
        "name": "MQTT",
        "topic": "v3/temp-hum-ceri-c133@ttn/devices/device-otto-peyre/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2233142a3ff27f63",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "a440a0c64d5c1337",
                "e656461d473648f1"
            ]
        ]
    },
    {
        "id": "a440a0c64d5c1337",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "format recieved data",
        "func": "msg.payload = {\n    timestamp: msg.payload.uplink_message.received_at,\n    bpm: msg.payload.uplink_message.decoded_payload.bpm\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "18e09193b1e279c5",
                "b653e9ca1d0be189"
            ]
        ]
    },
    {
        "id": "c323dabaf55295cd",
        "type": "ui_gauge",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "group": "28bb188818c9a8fb",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Suivi du BPM",
        "label": "BPM",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "18e09193b1e279c5",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "format bpm for gauge",
        "func": "msg.payload = msg.payload.bpm;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 220,
        "wires": [
            [
                "c323dabaf55295cd",
                "1609676f71b5171c",
                "648419c0b1588c22"
            ]
        ]
    },
    {
        "id": "0ad42e3df23859f9",
        "type": "postgresql",
        "z": "eb34c2cb8d54bb00",
        "name": "Insert BPM and timestamp",
        "query": "INSERT INTO heart_rate_data (timestamp, bpm) VALUES ($1, $2);",
        "postgreSQLConfig": "53dd661b3af8009e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1080,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b653e9ca1d0be189",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "format params for DB",
        "func": "msg.topic = \"INSERT INTO heart_rate_data (timestamp, bpm) VALUES ($1, $2)\";\nmsg.params = [\n    new Date().toISOString(), // Timestamp actuel\n    msg.payload.bpm           // Valeur BPM\n]; \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "0ad42e3df23859f9"
            ]
        ]
    },
    {
        "id": "92d96c33f2124f32",
        "type": "ui_date_picker",
        "z": "eb34c2cb8d54bb00",
        "name": "Date de début",
        "label": "Date de début",
        "group": "0ac5395a4c625cad",
        "order": 1,
        "width": "10",
        "height": "4",
        "passthru": true,
        "topic": "startDate",
        "topicType": "msg",
        "className": "",
        "x": 80,
        "y": 620,
        "wires": [
            [
                "198265dfa8ef1182"
            ]
        ]
    },
    {
        "id": "3036a5c1913fea6d",
        "type": "ui_date_picker",
        "z": "eb34c2cb8d54bb00",
        "name": "Date de fin",
        "label": "Date de fin",
        "group": "0ac5395a4c625cad",
        "order": 2,
        "width": "10",
        "height": "4",
        "passthru": true,
        "topic": "endDate",
        "topicType": "msg",
        "className": "",
        "x": 70,
        "y": 680,
        "wires": [
            [
                "834fd80baecd7a13"
            ]
        ]
    },
    {
        "id": "25dd04a580b398a3",
        "type": "ui_button",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "group": "0ac5395a4c625cad",
        "order": 3,
        "width": "20",
        "height": "2",
        "passthru": true,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 640,
        "wires": [
            [
                "fc94c28f0bb67985"
            ]
        ]
    },
    {
        "id": "ace02c7a2e87287c",
        "type": "ui_toast",
        "z": "eb34c2cb8d54bb00",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "ALERTE DEPASSEMENT ECG",
        "name": "ALERTE DEPASSEMENT ECG",
        "x": 1590,
        "y": 280,
        "wires": []
    },
    {
        "id": "c20a0c72cef6a798",
        "type": "postgresql",
        "z": "eb34c2cb8d54bb00",
        "name": "Select BPM between timestamps",
        "query": "SELECT timestamp, bpm \nFROM heart_rate_data \nWHERE timestamp BETWEEN $1 AND $2 \nORDER BY timestamp ASC;",
        "postgreSQLConfig": "53dd661b3af8009e",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1080,
        "y": 640,
        "wires": [
            [
                "3b77fe185e2d3789",
                "464108e301740721"
            ]
        ]
    },
    {
        "id": "1e08f8bb1bcbab25",
        "type": "ui_table",
        "z": "eb34c2cb8d54bb00",
        "group": "0ac5395a4c625cad",
        "name": "tableau",
        "order": 5,
        "width": "20",
        "height": "10",
        "columns": [
            {
                "field": "date",
                "title": "date",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bpm",
                "title": "bpm",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1620,
        "y": 640,
        "wires": []
    },
    {
        "id": "198265dfa8ef1182",
        "type": "change",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "834fd80baecd7a13",
        "type": "change",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fc94c28f0bb67985",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "group and convert dates, send to postgre",
        "func": "// Récupérer les dates depuis le contexte flow\nlet startDate = flow.get('start_date') || null;\nlet endDate = flow.get('end_date') || null;\n\n// Vérifier si les deux dates existent\nif (startDate && endDate) {\n    // Convertir les timestamps en format ISO ou autre format lisible\n    let formattedStartDate = new Date(startDate).toISOString(); // Format ISO\n    let formattedEndDate = new Date(endDate).toISOString(); // Format ISO\n\n    // Préparer le message pour le noeud PostgreSQL\n    return {\n        params: [formattedStartDate, formattedEndDate] // Les valeurs à insérer\n    };\n} else {\n    // Gestion des erreurs si les dates sont manquantes\n    return { payload: \"Dates manquantes\" };\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 640,
        "wires": [
            [
                "c20a0c72cef6a798"
            ]
        ]
    },
    {
        "id": "e656461d473648f1",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "format SNR & RSSI",
        "func": "var gateway = msg.payload.uplink_message.rx_metadata[0];\n\nmsg.rssi = gateway.rssi;\nmsg.snr = gateway.snr;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "bf3b8505d9272360",
                "8cf9646ea241ac49"
            ]
        ]
    },
    {
        "id": "bf3b8505d9272360",
        "type": "ui_text",
        "z": "eb34c2cb8d54bb00",
        "group": "d0a6eb8867ed9a2f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RSSI",
        "format": "{{msg.rssi}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "8cf9646ea241ac49",
        "type": "ui_text",
        "z": "eb34c2cb8d54bb00",
        "group": "d0a6eb8867ed9a2f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SNR",
        "format": "{{msg.snr}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "1609676f71b5171c",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "SEUIL NOTIFICATION",
        "func": "// Récupération du BPM\nvar bpm = msg.payload;\n\n// Récupération des seuils depuis le contexte de flux\nvar minThreshold = flow.get('seuil_min'); // Valeur par défaut : 60\nvar maxThreshold = flow.get('seuil_max'); // Valeur par défaut : 100\n\n// Vérification si le BPM dépasse les seuils\nif (bpm < minThreshold || bpm > maxThreshold) {\n    // Envoi de la notification si le seuil est dépassé\n    msg.notification = {\n        message: \"Le BPM est hors des limites !\",\n        bpm: bpm,\n        min: minThreshold,\n        max: maxThreshold\n    };\n} else {\n    // Pas de notification si les seuils ne sont pas dépassés\n    msg.notification = null;\n}\n\n// Retourner le message\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 280,
        "wires": [
            [
                "487700f23c84f035"
            ]
        ]
    },
    {
        "id": "48a1867f7bc0b3da",
        "type": "ui_numeric",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "label": "Seuil Minimal Notification",
        "tooltip": "",
        "group": "3e885d26f708a567",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "20",
        "max": "60",
        "step": 1,
        "className": "",
        "x": 1130,
        "y": 380,
        "wires": [
            [
                "fe2ce4a8d97ddd1a"
            ]
        ]
    },
    {
        "id": "bade264593167a11",
        "type": "ui_numeric",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "label": "Seuil Maximal Notification",
        "tooltip": "",
        "group": "3e885d26f708a567",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "80",
        "max": "150",
        "step": 1,
        "className": "",
        "x": 1130,
        "y": 340,
        "wires": [
            [
                "eb45f1ea3ef1fe3c"
            ]
        ]
    },
    {
        "id": "eb45f1ea3ef1fe3c",
        "type": "change",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "seuil_max",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "fe2ce4a8d97ddd1a",
        "type": "change",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "seuil_min",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "487700f23c84f035",
        "type": "switch",
        "z": "eb34c2cb8d54bb00",
        "name": "",
        "property": "notification",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1340,
        "y": 280,
        "wires": [
            [
                "ace02c7a2e87287c"
            ]
        ]
    },
    {
        "id": "648419c0b1588c22",
        "type": "ui_chart",
        "z": "eb34c2cb8d54bb00",
        "name": "Suivi du BPM",
        "group": "28bb188818c9a8fb",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Suivi du BPM",
        "chartType": "line",
        "legend": "true",
        "xformat": "YYYY-MM-DD HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3b77fe185e2d3789",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "format tableau & chart",
        "func": "let formattedData = [];\n\nfunction formatDate(timestamp) {\n    let d = new Date(timestamp);\n    return d.getFullYear() + '-' +\n        String(d.getMonth() + 1).padStart(2, '0') + '-' +\n        String(d.getDate()).padStart(2, '0') + ' ' +\n        String(d.getHours()).padStart(2, '0') + ':' +\n        String(d.getMinutes()).padStart(2, '0') + ':' +\n        String(d.getSeconds()).padStart(2, '0');\n}\n\nmsg.payload.forEach(row => {\n    formattedData.push({\n        date: formatDate(row.timestamp), // Formatage de la date\n        bpm: row.bpm // Garder le BPM tel quel\n    });\n});\n\nmsg.payload = formattedData;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 600,
        "wires": [
            [
                "1e08f8bb1bcbab25",
                "8114c18fdae804fe"
            ]
        ]
    },
    {
        "id": "8114c18fdae804fe",
        "type": "debug",
        "z": "eb34c2cb8d54bb00",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 580,
        "wires": []
    },
    {
        "id": "4ca63a72e57e18a7",
        "type": "ui_chart",
        "z": "eb34c2cb8d54bb00",
        "name": "Suivi du BPM",
        "group": "0ac5395a4c625cad",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Suivi du BPM",
        "chartType": "line",
        "legend": "false",
        "xformat": "YYYY-MM-DD HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1630,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "464108e301740721",
        "type": "function",
        "z": "eb34c2cb8d54bb00",
        "name": "function 1",
        "func": "let chartData = [];\n\n// Parcourir les résultats SQL et les formater\nmsg.payload.forEach(row => {\n    chartData.push({ x: new Date(row.timestamp), y: row.bpm });\n});\n\n// Formater pour le nœud chart\nmsg.payload = [{\n    series: [\"BPM\"],\n    data: [chartData],\n    labels: [\"BPM over Time\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 680,
        "wires": [
            [
                "4ca63a72e57e18a7"
            ]
        ]
    },
    {
        "id": "2233142a3ff27f63",
        "type": "mqtt-broker",
        "name": "",
        "broker": "eu1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "28bb188818c9a8fb",
        "type": "ui_group",
        "name": "Suivi du BPM en temps direct",
        "tab": "8242d7afb8f10858",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "53dd661b3af8009e",
        "type": "postgreSQLConfig",
        "name": "heart rate",
        "host": "localhost",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "heart_rate",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "node_red_user",
        "userFieldType": "str",
        "password": "password",
        "passwordFieldType": "str"
    },
    {
        "id": "0ac5395a4c625cad",
        "type": "ui_group",
        "name": "",
        "tab": "8c2b96f0bc4ea094",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0a6eb8867ed9a2f",
        "type": "ui_group",
        "name": "Monitoring LoRa",
        "tab": "92c146ab45a7bbcb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e885d26f708a567",
        "type": "ui_group",
        "name": "Seuil de notification",
        "tab": "de29fec5a620b62f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8242d7afb8f10858",
        "type": "ui_tab",
        "name": "Menu principal",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8c2b96f0bc4ea094",
        "type": "ui_tab",
        "name": "Historique",
        "icon": "fa-database",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "92c146ab45a7bbcb",
        "type": "ui_tab",
        "name": "Monitoring LoRa",
        "icon": "cloud",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "de29fec5a620b62f",
        "type": "ui_tab",
        "name": "Paramètres",
        "icon": "fa-cog",
        "order": 4,
        "disabled": false,
        "hidden": false
    }
]
